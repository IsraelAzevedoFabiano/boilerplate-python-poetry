[tool.poetry]
name = "boilerplate-python-poetry"
version = "0.1.0"
description = "Boilerplate para projetos que usem python e poetry."
authors = ["IsraelAzevedoFabiano <israelazevedofabiano@gmail.com>"]
readme = "README.md"
packages = [{ include = "*", from = "src" }]

[tool.poetry.dependencies]
python = "^3.12.4"
python-dotenv = "^1.0.1"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.3"
pytest-cov = "^6.0.0"
taskipy = "^1.14.0"
ruff = "^0.7.2"
ipdb = "^0.13.13"

[tool.pytest.ini_options]
pythonpath = '.'
addopts = '-p no:warnings'
python_files = "tests/*.py"

[tool.ruff]
line-length = 79
extend-exclude = ['exemplo_do_que_deve_ser_excluido']

[tool.ruff.lint]
preview = true
select = ['I', 'F', 'E', 'W', 'PL', 'PT']

[tool.ruff.format]
preview = true
quote-style = 'single'

[tool.taskipy.tasks]
lint = 'ruff check .; ruff check . --diff'
format = 'ruff check . --fix; ruff format .'
run = 'fastapi dev fast_zero/app.py'
pre_test = 'task lint'
test = 'pytest -s -x --cov=fast_zero -vv'
post_test = 'coverage html'

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
